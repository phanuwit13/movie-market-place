{"ast":null,"code":"import _asyncToGenerator from \"/Users/phanuwitkittirong/Documents/project/movie-market-place/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class HttpService {\n  constructor(http, router) {\n    var _this = this;\n    this.http = http;\n    this.router = router;\n    this.rootPath = 'https://api.themoviedb.org/3/search/movie?api_key=179d983912bdcb395e93864692030745&query=';\n    this.imgBasePath = 'https://image.tmdb.org/t/p/w500/';\n    this.totalCart = 0;\n    this.get = path => {\n      return new Promise( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (resolve) {\n          try {\n            const response = yield _this.http.get(_this.rootPath + path);\n            resolve({\n              success: true,\n              response\n            });\n          } catch (error) {\n            resolve({\n              success: false,\n              response: error\n            });\n          }\n          // .toPromise()\n          // .then((value) => {\n          //   resolve({ connect: true, response: value });\n          // })\n          // .catch((reason) => {\n          //   resolve({ connect: false, response: reason });\n          // });\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n  }\n}\nHttpService.ɵfac = function HttpService_Factory(t) {\n  return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpService,\n  factory: HttpService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAOA,OAAM,MAAOA,WAAW;EAOtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAA;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAN7C,aAAQ,GACb,2FAA2F;IACtF,gBAAW,GAAW,kCAAkC;IAExD,cAAS,GAAG,CAAC;IAIb,QAAG,GAAIC,IAAY,IAAI;MAC5B,OAAO,IAAIC,OAAO;QAAA,6BAAC,WAAOC,OAAO,EAAI;UACnC,IAAI;YACF,MAAMC,QAAQ,SAAS,KAAI,CAACL,IAAI,CAACM,GAAG,CAAC,KAAI,CAACC,QAAQ,GAAGL,IAAI,CAAC;YAC1DE,OAAO,CAAC;cAAEI,OAAO,EAAE,IAAI;cAAEH;YAAQ,CAAE,CAAC;WACrC,CAAC,OAAOI,KAAK,EAAE;YACdL,OAAO,CAAC;cAAEI,OAAO,EAAE,KAAK;cAAEH,QAAQ,EAAEI;YAAK,CAAE,CAAC;;UAG9C;UACA;UACA;UACA;UACA;UACA;UACA;QACF,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;IACJ,CAAC;EAnB8D;;AAPpDX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["HttpService","constructor","http","router","path","Promise","resolve","response","get","rootPath","success","error","factory","providedIn"],"sourceRoot":"","sources":["/Users/phanuwitkittirong/Documents/project/movie-market-place/src/services/http.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Router } from '@angular/router'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n  public rootPath: string =\n    'https://api.themoviedb.org/3/search/movie?api_key=179d983912bdcb395e93864692030745&query='\n  public imgBasePath: string = 'https://image.tmdb.org/t/p/w500/'\n\n  public totalCart = 0\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  public get = (path: string) => {\n    return new Promise(async (resolve) => {\n      try {\n        const response = await this.http.get(this.rootPath + path)\n        resolve({ success: true, response })\n      } catch (error) {\n        resolve({ success: false, response: error })\n      }\n\n      // .toPromise()\n      // .then((value) => {\n      //   resolve({ connect: true, response: value });\n      // })\n      // .catch((reason) => {\n      //   resolve({ connect: false, response: reason });\n      // });\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
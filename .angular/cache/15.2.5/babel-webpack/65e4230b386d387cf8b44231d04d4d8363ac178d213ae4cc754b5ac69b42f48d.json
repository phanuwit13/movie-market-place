{"ast":null,"code":"import _asyncToGenerator from \"/Users/phanuwitkittirong/Documents/project/movie-market-place/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class HttpService {\n  constructor(http, router) {\n    var _this = this;\n    this.http = http;\n    this.router = router;\n    // search/movie?api_key=179d983912bdcb395e93864692030745&query=\n    this.ROOT_PATH = 'https://api.themoviedb.org/3/';\n    this.imgBasePath = 'https://image.tmdb.org/t/p/w500/';\n    this.totalCart = 0;\n    this.ROUTE_API = {\n      TREND_MOVIE: 'trending/movie/week'\n    };\n    this.get = path => {\n      return new Promise( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (resolve) {\n          try {\n            const response = yield _this.http.get(_this.rootPath + path).toPromise();\n            resolve({\n              success: true,\n              response\n            });\n          } catch (error) {\n            resolve({\n              success: false,\n              response: error\n            });\n          }\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n    this.getTrendListMovie = path => {\n      return new Promise( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (resolve) {\n          try {\n            const response = yield _this.http.get(`${_this.ROOT_PATH}${_this.ROUTE_API.TREND_MOVIE}?api_key=${'179d983912bdcb395e93864692030745'}`).toPromise();\n            resolve({\n              success: true,\n              response\n            });\n          } catch (error) {\n            resolve({\n              success: false,\n              response: error\n            });\n          }\n        });\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    };\n  }\n}\nHttpService.ɵfac = function HttpService_Factory(t) {\n  return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpService,\n  factory: HttpService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAOA,OAAM,MAAOA,WAAW;EAYtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAA;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAXpD;IACO,cAAS,GACd,+BAA+B;IAC1B,gBAAW,GAAW,kCAAkC;IAExD,cAAS,GAAG,CAAC;IAEZ,cAAS,GAAG;MAClBC,WAAW,EAAE;KACd;IAIM,QAAG,GAAIC,IAAY,IAAI;MAC5B,OAAO,IAAIC,OAAO;QAAA,6BAAC,WAAOC,OAAO,EAAI;UACnC,IAAI;YACF,MAAMC,QAAQ,SAAS,KAAI,CAACN,IAAI,CAACO,GAAG,CAAC,KAAI,CAACC,QAAQ,GAAGL,IAAI,CAAC,CAACM,SAAS,EAAE;YACtEJ,OAAO,CAAC;cAAEK,OAAO,EAAE,IAAI;cAAEJ;YAAQ,CAAE,CAAC;WACrC,CAAC,OAAOK,KAAK,EAAE;YACdN,OAAO,CAAC;cAAEK,OAAO,EAAE,KAAK;cAAEJ,QAAQ,EAAEK;YAAK,CAAE,CAAC;;QAEhD,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;IACJ,CAAC;IAEM,sBAAiB,GAAIR,IAAY,IAAI;MAC1C,OAAO,IAAIC,OAAO;QAAA,8BAAC,WAAOC,OAAO,EAAI;UACnC,IAAI;YACF,MAAMC,QAAQ,SAAS,KAAI,CAACN,IAAI,CAC7BO,GAAG,CACF,GAAG,KAAI,CAACK,SAAS,GAAG,KAAI,CAACC,SAAS,CAACX,WAAW,YAAY,kCAAkC,EAAE,CAC/F,CACAO,SAAS,EAAE;YACdJ,OAAO,CAAC;cAAEK,OAAO,EAAE,IAAI;cAAEJ;YAAQ,CAAE,CAAC;WACrC,CAAC,OAAOK,KAAK,EAAE;YACdN,OAAO,CAAC;cAAEK,OAAO,EAAE,KAAK;cAAEJ,QAAQ,EAAEK;YAAK,CAAE,CAAC;;QAEhD,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;IACJ,CAAC;EA1B8D;;AAZpDb,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAgB,SAAXhB,WAAW;EAAAiB,YAFV;AAAM","names":["HttpService","constructor","http","router","TREND_MOVIE","path","Promise","resolve","response","get","rootPath","toPromise","success","error","ROOT_PATH","ROUTE_API","factory","providedIn"],"sourceRoot":"","sources":["/Users/phanuwitkittirong/Documents/project/movie-market-place/src/services/http.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Router } from '@angular/router'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n  // search/movie?api_key=179d983912bdcb395e93864692030745&query=\n  public ROOT_PATH: string =\n    'https://api.themoviedb.org/3/'\n  public imgBasePath: string = 'https://image.tmdb.org/t/p/w500/'\n\n  public totalCart = 0\n\n  private ROUTE_API = {\n    TREND_MOVIE: 'trending/movie/week',\n  }\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  public get = (path: string) => {\n    return new Promise(async (resolve) => {\n      try {\n        const response = await this.http.get(this.rootPath + path).toPromise()\n        resolve({ success: true, response })\n      } catch (error) {\n        resolve({ success: false, response: error })\n      }\n    })\n  }\n\n  public getTrendListMovie = (path: string) => {\n    return new Promise(async (resolve) => {\n      try {\n        const response = await this.http\n          .get(\n            `${this.ROOT_PATH}${this.ROUTE_API.TREND_MOVIE}?api_key=${'179d983912bdcb395e93864692030745'}`\n          )\n          .toPromise()\n        resolve({ success: true, response })\n      } catch (error) {\n        resolve({ success: false, response: error })\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}